@model IEnumerable<TailorApp.Domain.Entities.InventoryModel.Item>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .dataTables_filter {
        display: none;
    }
</style>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.css">


<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-block">
                <div id="placeHolder"></div>
                <div class="col-lg-12">
                    <b><i class="ti-tag"></i> <span><b>Item List</b></span></b>
                    <a class="btn btn-success" style="margin-bottom:12px;float:right;" asp-action="Create"><i class="ti-plus"></i>Create New</a>
                </div>
                <br />
                <hr />
                <div class="dt-responsive table-responsive">
                    <table class="table table-striped table-bordered nowrap" id="itemTable">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ItemID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>

                                <th>
                                    @Html.DisplayNameFor(model => model.Unit)
                                </th>

                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                   Last Updated
                                </th>
                                <th>Action</th>
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ItemID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>

                                <th>
                                    @Html.DisplayNameFor(model => model.Unit)
                                </th>

                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                   Last Updated
                                </th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.js"></script>
    <script type="text/javascript" src="~/js/Popup.js"></script>
    <script>

        $(document).ready(function () {

            jQuery('#itemTable thead tr:eq(0) th:not(:last,:first,:nth-child(6))').each(function () {
                    var title = jQuery(this).text();
                    jQuery(this).html('<input class="form-control" type="text" placeholder="Search ' + title + '" />');
                });

            var itemTable = $("#itemTable").DataTable({
                'processing': true,
                'serverSide': true,
                "order": [[0, 'desc']],
                'ajax': {
                    'url': '@Url.Action("LoadItemList", "Items")',
                    'method': 'POST',
                    'contentType': 'application/json',
                    'data': function (d) {
                        return JSON.stringify(d);
                    }
                },
                "lengthMenu": [[10, 15], [10, 15]],
                "lengthChange": true,
                "searching": true,
                "scrollX": true,
                //fixedColumns: {
                //    leftColumns: 1,
                //    rightColumns: 1
                //},
                'columns': [
                    {
                        data: "itemID", name: "ItemID",
                       
                    },

                    {
                        data: "name", name: "Name",
                        render: function (data, type, row, meta) {
                            return '<img src=' + row.imagePath + ' class="rounded-circle" height="40" width="40" asp-append-version="true" />' +
                                ' - ' + row.name + ''
                        }
                    },
                    { data: "unit", name: "Unit" },
                    { data: "description", name: "Description" },
                    { data: "lastUpdated", name: "LastUpdated" },
                    {
                        data: "itemID", name: "itemID", searchable: false,
                        render: function (data, type, row, meta) {
                            return '<a href="/Items/Edit/' + row.itemID + '">' + '<i class="ti-pencil"></i></a> | ' +
                                '<a data-toggle="ajax-modal" id="delete" data-target="#customerModal" href="/Items/Details/' + row.itemID + '">' + '<i class="ti-list"></i></a> | ' +
                                '<a data-toggle="ajax-modal" id="delete" data-target="#customerModal" href="/Items/Delete/' + row.itemID + '">' + '<i class="ti-trash"></i></a>'

                        }
                    },
                ]
            });

            // Individual Column Searching In case of Some Fixed Column
            jQuery(document).on('focusout', '#customerTable_wrapper thead input[type="text"]', function () {
                itemTable.column(jQuery(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });


            // Select List filtering

            jQuery(itemTable.table().container()).on('change', 'thead select', function () {
                console.log(this.value);
                itemTable.column(jQuery(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });
        });
        function PreviewImg(input) {
            var File = input.files;

            if (File && File[0]) {
                ReadImage(File[0]);
            }
        }
    </script>

}
